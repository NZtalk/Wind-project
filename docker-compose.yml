version: "3.5"

services:
  python:
    build: .
    container_name: app-itw
    command: uvicorn src.main:app --host 0.0.0.0 --port 80 --reload
    ports:
      - 80:80
      - 5678:5678
    volumes:
      - .:/app
    depends_on:
      - mongodb
      - mariadb
      - kafka-connect-mongodb
    networks:
      - app-itw
  
  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: itw
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    networks:
      - app-itw

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: itw
    volumes:
      - mariadbdata:/var/lib/mysql
    networks:
      - app-itw

  kafka-connect-mongodb:
    image: confluentinc/kafka-connect-mongodb:latest
    container_name: kafka-connect-mongodb
    restart: unless-stopped
    depends_on:
      - kafka
      - mongodb
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-mongodb-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
    volumes:
      - ./connectors/mongodb-sink-connector.json:/etc/kafka-connect-mongodb/mongodb-sink-connector.json
    networks:
      - app-itw

networks:
  app-itw:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  mariadbdata:
    driver: local
